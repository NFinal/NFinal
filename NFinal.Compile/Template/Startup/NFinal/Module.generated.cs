#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NFinal.Compile.Template.Startup.NFinal
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class Module : RazorGenerator.Templating.RazorTemplateBase
    {
#line hidden
        #line 3 "..\..\Template\Startup\NFinal\Module.cshtml"
           
    public Compile.Template.Startup.NFinal.ModuleModel Model { get; set; }

        #line default
        #line hidden
        
        public override void Execute()
        {
WriteLiteral("\r\n");

WriteLiteral("﻿﻿//======================================================================\r\n//\r\n/" +
"/        Copyright : Zhengzhou Strawberry Computer Technology Co.,LTD.\r\n//      " +
"  All rights reserved\r\n//        \r\n//        Application:NFinal MVC framework\r\n/" +
"/        Filename :Module.cs\r\n//        Description :路由类\r\n//\r\n//        created " +
"by Lucas at  2015-10-15`\r\n//     \r\n//        WebSite:http://www.nfinal.com\r\n//\r\n" +
"//======================================================================\r\nusing " +
"System;\r\nusing System.Collections.Specialized;\r\n#if (!MicrosoftOwin && !NFinalOw" +
"in)\r\nusing System.Web;\r\n#endif\r\nnamespace NFinal\r\n{\r\n#if (!MicrosoftOwin && !NFi" +
"nalOwin)\r\n    public class Module:IHttpModule\r\n    {\r\n\t\tpublic virtual void Init" +
"(HttpApplication app)\r\n        {\r\n            app.AuthorizeRequest += new EventH" +
"andler(this.BaseModuleRewriter_AuthorizeRequest);\r\n        }\r\n        public vir" +
"tual void Dispose()\r\n        { }\r\n        protected virtual void BaseModuleRewri" +
"ter_AuthorizeRequest(object sender, EventArgs e)\r\n        {\r\n            HttpApp" +
"lication app = (HttpApplication)sender;\r\n            // Remove the \"Server\" HTTP" +
" Header from response\r\n            if (null != app && null != app.Request &&\r\n  " +
"              null != app.Context && null != app.Context.Response)\r\n            " +
"{\r\n                try\r\n\t\t\t\t{\r\n\t\t\t\t\tSystem.Collections.Specialized.NameValueColl" +
"ection headers = app.Context.Response.Headers;\r\n\t\t\t\t\tif (null != headers)\r\n\t\t\t\t\t" +
"{\r\n\t\t\t\t\t\theaders.Remove(\"Server\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n    " +
"        }\r\n            Rewrite(app.Request.Path, app);\r\n        }\r\n        prote" +
"cted void Rewrite(string requestedPath, HttpApplication app)\r\n        {\r\n       " +
"     int actonId = ActionSearch.Search(requestedPath);\r\n            if (actonId " +
"> 0)\r\n            {\r\n                //重写url使其能够让NFinal.Handler进行处理\r\n           " +
"     app.Context.RewritePath(string.Format(\"{0}{1}{2}\", requestedPath, actonId.T" +
"oString(\"00000\"), \".nf\"));\r\n            }\r\n        }\r\n    }\r\n#endif\r\n}");

        }
    }
}
#pragma warning restore 1591
