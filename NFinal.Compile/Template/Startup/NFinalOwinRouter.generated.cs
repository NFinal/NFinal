#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NFinal.Compile.Template.Startup
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class NFinalOwinRouter : RazorGenerator.Templating.RazorTemplateBase
    {
#line hidden
        #line 3 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
           
    public Compile.Template.Startup.NFinalOwinRouterModel Model { get; set; }

        #line default
        #line hidden
        
        public override void Execute()
        {
WriteLiteral("\r\n");

WriteLiteral(@"﻿﻿//======================================================================
//
//        Copyright : Zhengzhou Strawberry Computer Technology Co.,LTD.
//        All rights reserved
//        
//        Application:NFinal MVC framework
//        Filename :Router.cs
//        Description :路由类
//
//        created by Lucas at  2015-10-15`
//     
//        WebSite:http://www.nfinal.com
//
//======================================================================
using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace ");

            
            #line 24 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
            
            
            #line default
            #line hidden
            
            #line 24 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
       Write(Model.project);

            
            #line default
            #line hidden
            
            #line 24 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                          
            
            #line default
            #line hidden
WriteLiteral(@"
{
#if (!AspNET && !MicrosoftOwin)
    public static class NFinalOwinRouter
    {
        /// <summary>  
        /// 本地时间转成GMT时间  
        /// </summary>  
        public static string ToGmtString(DateTime dt)
        {
            return dt.ToUniversalTime().ToString(""r"");
        }
        /// <summary>  
        /// 本地时间转成GMT格式的时间  
        /// </summary>  
        public static string ToGmtFormat(DateTime dt)
        {
            return dt.ToString(""r"") + dt.ToString(""zzz"").Replace("":"", """");
        }
        /// <summary>  
        /// GMT时间转成本地时间  
        /// </summary>  
        /// <param");

WriteLiteral(" name=\"gmt\"");

WriteLiteral(">字符串形式的GMT时间</param>  \r\n        /// <returns></returns>  \r\n        public static " +
"DateTime Gmt2Local(string gmt)\r\n        {\r\n            DateTime dt = DateTime.Mi" +
"nValue;\r\n            try\r\n            {\r\n                string pattern = \"\";\r\n " +
"               if (gmt.IndexOf(\"+0\") != -1)\r\n                {\r\n                " +
"    gmt = gmt.Replace(\"GMT\", \"\");\r\n                    pattern = \"ddd, dd MMM yy" +
"yy HH\':\'mm\':\'ss zzz\";\r\n                }\r\n                if (gmt.ToUpper().Inde" +
"xOf(\"GMT\") != -1)\r\n                {\r\n                    pattern = \"ddd, dd MMM" +
" yyyy HH\':\'mm\':\'ss \'GMT\'\";\r\n                }\r\n                if (pattern != \"\"" +
")\r\n                {\r\n                    dt = DateTime.ParseExact(gmt, pattern," +
" System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTim" +
"eStyles.AdjustToUniversal);\r\n                    dt = dt.ToLocalTime();\r\n       " +
"         }\r\n                else\r\n                {\r\n                    dt = Co" +
"nvert.ToDateTime(gmt);\r\n                }\r\n            }\r\n            catch\r\n   " +
"         {\r\n            }\r\n            return dt;\r\n        }\r\n        private st" +
"atic void Callback(IAsyncResult result)\r\n        {\r\n            //结束异步写入\r\n      " +
"      System.IO.FileStream stream = (System.IO.FileStream)result.AsyncState;\r\n  " +
"          stream.EndWrite(result);\r\n            stream.Dispose();\r\n        }\r\n\t\t" +
"\t\t//设置浏览器缓存\r\n        public static void SetBrowerCache(NFinal.Action action,stri" +
"ng requestPath, int optimizing,int minutes)\r\n        {\r\n            //浏览器缓存\r\n   " +
"         if ((optimizing & (int)NFinal.Optimizing.Cache_Brower_Cached) != 0)\r\n  " +
"          {\r\n                action.SetResponseHeader(\"Cache-Control\",\"public\");" +
"\r\n                action.SetResponseHeader(\"Date\",ToGmtString(DateTime.Now));\r\n " +
"               action.SetResponseHeader(\"Date\",ToGmtString(DateTime.Now));\r\n    " +
"            //NotModify\r\n                if ((optimizing & (int)NFinal.Optimizin" +
"g.Cache_Browse_NotModify) != 0)\r\n                {\r\n                    string f" +
"ilename = NFinal.Utility.MapPath(requestPath);\r\n                    if (System.I" +
"O.File.Exists(filename))\r\n                    {\r\n                        System." +
"IO.FileInfo fileInfo = new System.IO.FileInfo(filename);\r\n                      " +
"  string lastModified = ToGmtString(fileInfo.LastWriteTime);\r\n                  " +
"      action.SetResponseHeader(\"Last-Modified\", lastModified);\r\n                " +
"    }\r\n                    else\r\n                    {\r\n                        " +
"action.SetResponseHeader(\"Last-Modified\", ToGmtString(DateTime.Now));\r\n         " +
"           }\r\n                }\r\n                //Expires\r\n                else" +
" if ((optimizing & (int)NFinal.Optimizing.Cache_Browser_Expires) != 0)\r\n        " +
"        {\r\n                    action.SetResponseHeader(\"Expires\", ToGmtString(D" +
"ateTime.Now.AddMinutes(minutes)));\r\n                }\r\n                //NoExpir" +
"es\r\n                else if ((optimizing & (int)NFinal.Optimizing.Cache_Browser_" +
"NoExpires) != 0)\r\n                {\r\n                }\r\n            }\r\n         " +
"   else\r\n            {\r\n                //不进行缓存\r\n                action.SetRespo" +
"nseHeader(\"Cache-Control\",\"private\");\r\n            }\r\n        }\r\n        //设置服务器" +
"缓存\r\n        public static void SetServerCache(string requestPath, string query, " +
"byte[] buffer, int optimizing, int seconds)\r\n        {\r\n            //服务器缓存\r\n   " +
"         if ((optimizing & (int)NFinal.Optimizing.Cache_Server_Cached) != 0)\r\n  " +
"          {\r\n                //FileDependency\r\n                if ((optimizing &" +
" (int)NFinal.Optimizing.Cache_Server_FileDependency) != 0)\r\n                {\r\n " +
"                   string fileName=null;\r\n\t\t\t\t\tif(requestPath.EndsWith(\"/\"))\r\n\t\t" +
"\t\t\t{\r\n\t\t\t\t\t\tfileName = NFinal.Utility.MapPath(requestPath + \"Index.html\");\r\n\t\t\t\t" +
"\t}\r\n                    else\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfileName = NFinal.Utility.MapPath(re" +
"questPath);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((optimizing & (int)NFinal.Optimizing.CompressZip) " +
"!= 0)\r\n                    {\r\n                        fileName = fileName + \".zi" +
"p\";\r\n                    }\r\n                    else if ((optimizing & (int)NFin" +
"al.Optimizing.CompressDeflate) != 0)\r\n                    {\r\n                   " +
"     fileName = fileName + \".deflate\";\r\n                    }\r\n                 " +
"   //将HTML写入静态文件\r\n                    if (!System.IO.File.Exists(fileName))\r\n   " +
"                 {\r\n\t\t\t\t\t\tstring dir = System.IO.Path.GetDirectoryName(fileName)" +
";\r\n                        if (!System.IO.Directory.Exists(dir))\r\n              " +
"          {\r\n                            System.IO.Directory.CreateDirectory(dir" +
");\r\n                        }\r\n                        System.IO.FileStream file" +
" = new System.IO.FileStream(fileName, System.IO.FileMode.Create, System.IO.FileA" +
"ccess.Write, System.IO.FileShare.ReadWrite, 1024, true);\r\n                      " +
"  file.BeginWrite(buffer, 0, buffer.Length, new AsyncCallback(Callback), file);\r" +
"\n                    }\r\n\t\t\t\t\tif (seconds > 0)\r\n                    {\r\n\t\t\t\t\t\t//将H" +
"TML插入新的缓存\r\n\t\t\t\t\t\tSystem.Runtime.Caching.CacheItemPolicy itemPolicy = new System." +
"Runtime.Caching.CacheItemPolicy();\r\n\t\t\t\t\t\titemPolicy.ChangeMonitors.Add(new Syst" +
"em.Runtime.Caching.HostFileChangeMonitor(new string []{fileName }));\r\n\t\t\t\t\t\tSyst" +
"em.Runtime.Caching.MemoryCache.Default.Set(new System.Runtime.Caching.CacheItem(" +
"requestPath+query,buffer),itemPolicy);\r\n\t\t\t\t\t}\r\n                }\r\n             " +
"   //AbsoluteExpiration\r\n                else if ((optimizing & (int)NFinal.Opti" +
"mizing.Cache_Server_AbsoluteExpiration) != 0)\r\n                {\r\n              " +
"      System.Runtime.Caching.CacheItemPolicy itemPolicy = new System.Runtime.Cac" +
"hing.CacheItemPolicy();\r\n                    itemPolicy.AbsoluteExpiration=DateT" +
"imeOffset.Now.AddSeconds(seconds);\r\n                    System.Runtime.Caching.M" +
"emoryCache.Default.Set(new System.Runtime.Caching.CacheItem(requestPath + query," +
" buffer), itemPolicy);\r\n                }\r\n                //SlidingExpiration\r\n" +
"                else if ((optimizing & (int)NFinal.Optimizing.Cache_Server_Slidi" +
"ngExpiration) != 0)\r\n                {\r\n                    System.Runtime.Cachi" +
"ng.CacheItemPolicy itemPolicy = new System.Runtime.Caching.CacheItemPolicy();\r\n " +
"                   itemPolicy.SlidingExpiration=new TimeSpan(0, 0, seconds);\r\n  " +
"                  System.Runtime.Caching.MemoryCache.Default.Set(new System.Runt" +
"ime.Caching.CacheItem(requestPath + query,buffer),itemPolicy);\r\n                " +
"}\r\n            }\r\n        }\r\n        //写入缓存\r\n        public static bool WriteCac" +
"he(NFinal.Action action,string requestPath,int optimizing)\r\n        {\r\n         " +
"   //服务器缓存\r\n            if ((optimizing & (int)NFinal.Optimizing.Cache_Server_Ca" +
"ched) != 0)\r\n            {\r\n                object cache = System.Runtime.Cachin" +
"g.MemoryCache.Default.Get(requestPath);\r\n                //如果缓存存在则直接输出.\r\n       " +
"         if (cache != null)\r\n                {\r\n                    if ((optimiz" +
"ing & (int)NFinal.Optimizing.Comresssed) != 0)\r\n                    {\r\n         " +
"               if ((optimizing & (int)NFinal.Optimizing.CompressZip) != 0)\r\n    " +
"                    {\r\n                            action.SetResponseHeader(\"Con" +
"tent-encoding\", \"gzip\");\r\n                        }\r\n                        els" +
"e if ((optimizing & (int)NFinal.Optimizing.CompressDeflate) != 0)\r\n             " +
"           {\r\n                            action.SetResponseHeader(\"Content-enco" +
"ding\", \"deflate\");\r\n                        }\r\n                    }\r\n          " +
"          byte[] buffer= (byte[])cache;\r\n                    action.Write(buffer" +
", 0, buffer.Length);\r\n                    action.Close();\r\n                    r" +
"eturn true;\r\n                }\r\n            }\r\n            return false;\r\n      " +
"  }\r\n        /// <summary>\r\n        /// 计算actionUrl\r\n        /// </summary>\r\n   " +
"     /// <param");

WriteLiteral(" name=\"requestedPath\"");

WriteLiteral(@"></param>
        /// <returns></returns>
        private static string GetActionUrl(string requestedPath)
        {
            int position = requestedPath.LastIndexOf('.');
            string actionUrl = """";
            if (position > 0)
            {
				int pointer = 0;
                bool hasGet = int.TryParse(requestedPath.Substring(position - 2, 2), out pointer);
                if (hasGet)
                {
                    actionUrl = requestedPath.Substring(0, pointer + 1);
                }
                else
                {
                    actionUrl = requestedPath;
                }
            }
            return actionUrl;
        }
        public static void Run(IDictionary<string,object> enviroment,int actionId)
        {
			NFinal.Owin.Request request = new NFinal.Owin.Request(enviroment);
			NFinal.NameValueCollection get = request.get;
            //获取actionUrl,用于获取参数
			switch (actionId)
            {
");

            
            #line 246 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
				
            
            #line default
            #line hidden
            
            #line 246 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
      int i=1;int j=1;
				foreach(var fileData in Model.controllerFileDataList){
				var config=fileData.config;
                foreach(var classData in fileData.ClassDataList){
				foreach(var method in classData.MethodDataList){
					if(method.isPublic){

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t");

WriteLiteral("case ");

            
            #line 252 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
       Write(i);

            
            #line default
            #line hidden
WriteLiteral(":\r\n");

WriteLiteral("\t\t\t\t\t");

WriteLiteral("{\r\n");

            
            #line 254 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
						if(!method.urlParser.hasNoParamsInUrl){

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t");

WriteLiteral("Regex regParameters = new Regex(\"");

            
            #line 255 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 255 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                       Write(method.urlParser.parameterRegex);

            
            #line default
            #line hidden
            
            #line 255 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                            
            
            #line default
            #line hidden
WriteLiteral("\");\r\n");

WriteLiteral("\t\t\t\t\t\t\t");

WriteLiteral("Match matParameters = regParameters.Match(request.requestPath);\r\n");

            
            #line 257 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
							j=1;
							foreach(var parameterData in method.parameterDataList){
							if(parameterData.isUrlParameter){

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t");

WriteLiteral("request.get.Add(\"");

            
            #line 260 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 260 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                       Write(parameterData.name);

            
            #line default
            #line hidden
            
            #line 260 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                               
            
            #line default
            #line hidden
WriteLiteral("\", matParameters.Groups[");

            
            #line 260 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                   Write(j);

            
            #line default
            #line hidden
WriteLiteral("].Value);\r\n");

            
            #line 261 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
							j++;
							}
							}
							}
						
            
            #line default
            #line hidden
            
            #line 265 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
 Write(method.verifyCode);

            
            #line default
            #line hidden
            
            #line 265 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                        

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("int optimizing = ");

            
            #line 266 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                           
            
            #line default
            #line hidden
            
            #line 266 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                      Write(method.optimizing);

            
            #line default
            #line hidden
            
            #line 266 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                             
            
            #line default
            #line hidden
WriteLiteral(";\r\n");

WriteLiteral("                        ");

WriteLiteral("int minutes = ");

            
            #line 267 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                          
            
            #line default
            #line hidden
            
            #line 267 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                     Write(method.minutes);

            
            #line default
            #line hidden
            
            #line 267 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                         
            
            #line default
            #line hidden
WriteLiteral(";\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("bool hasCache = false;\r\n");

            
            #line 269 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                        //服务器缓存

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("bool serverCahce = (optimizing & (int)NFinal.Optimizing.Cache_Server_Cached) != 0" +
";\r\n");

WriteLiteral("                        ");

WriteLiteral("string key = string.Empty;\r\n");

WriteLiteral("                        ");

WriteLiteral("if (serverCahce)\r\n");

WriteLiteral("                        ");

WriteLiteral("{\r\n");

WriteLiteral("                            ");

WriteLiteral("NFinal.RedisCache cache = new NFinal.RedisCache(\"localhost\", minutes);\r\n");

WriteLiteral("                            ");

WriteLiteral("NFinal.Owin.Response response = cache.Get<NFinal.Owin.Response>(key);\r\n");

WriteLiteral("                            ");

WriteLiteral("if (response.stream != null)\r\n");

WriteLiteral("                            ");

WriteLiteral("{\r\n");

WriteLiteral("                                ");

WriteLiteral("hasCache = true;\r\n");

WriteLiteral("                                ");

            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                               Write(fileData.appName);

            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                     
            
            #line default
            #line hidden
WriteLiteral(".Web.");

            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                             
            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                        Write(config.defaultStyle);

            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                 
            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                    
            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                               Write(classData.relativeDotName);

            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                              
            
            #line default
            #line hidden
WriteLiteral(".");

            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                  
            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                             Write(method.name);

            
            #line default
            #line hidden
            
            #line 279 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                              
            
            #line default
            #line hidden
WriteLiteral("Action.WriteResponse(enviroment, response);\r\n");

WriteLiteral("                                ");

WriteLiteral("return;\r\n");

WriteLiteral("                            ");

WriteLiteral("}\r\n");

WriteLiteral("                        ");

WriteLiteral("}\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("NFinal.CompressMode compressMode = NFinal.CompressMode.None;\n");

WriteLiteral("                        ");

WriteLiteral("if ((optimizing & (int)NFinal.Optimizing.CompressZip) != 0)\r\n");

WriteLiteral("                        ");

WriteLiteral("{\r\n");

WriteLiteral("                        ");

WriteLiteral("    compressMode = NFinal.CompressMode.GZip;\r\n");

WriteLiteral("                        ");

WriteLiteral("}\n");

WriteLiteral("                        ");

WriteLiteral("if ((optimizing & (int)NFinal.Optimizing.CompressDeflate) != 0)\r\n");

WriteLiteral("                        ");

WriteLiteral("{\r\n");

WriteLiteral("                        ");

WriteLiteral("    compressMode = NFinal.CompressMode.Deflate;\r\n");

WriteLiteral("                        ");

WriteLiteral("}\r\n");

WriteLiteral("\t\t\t\t\t\t");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
          
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
     Write(fileData.appName);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                           
            
            #line default
            #line hidden
WriteLiteral(".Web.");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                   
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                              Write(config.defaultStyle);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                       
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                          
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                     Write(classData.relativeDotName);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                    
            
            #line default
            #line hidden
WriteLiteral(".");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                        
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                   Write(method.name);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                    
            
            #line default
            #line hidden
WriteLiteral("Action control= new ");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                           
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                      Write(fileData.appName);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                            
            
            #line default
            #line hidden
WriteLiteral(".Web.");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                    
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                               Write(config.defaultStyle);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                        
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                           
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                      Write(classData.relativeDotName);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                                                     
            
            #line default
            #line hidden
WriteLiteral(".");

            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                                                         
            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                                                    Write(method.name);

            
            #line default
            #line hidden
            
            #line 292 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                                                                                                                                                                     
            
            #line default
            #line hidden
WriteLiteral("Action(enviroment,request,compressMode);\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control.SetResponseHeader(\"Content-Type\", \"");

            
            #line 293 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                     
            
            #line default
            #line hidden
            
            #line 293 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                Write(method.contentType);

            
            #line default
            #line hidden
            
            #line 293 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                                        
            
            #line default
            #line hidden
WriteLiteral("\");\r\n");

            
            #line 294 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
						foreach(var parameterData in method.parameterDataList){

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("\t");

            
            #line 295 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
           
            
            #line default
            #line hidden
            
            #line 295 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
      Write(parameterData.getParamterCode);

            
            #line default
            #line hidden
            
            #line 295 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                         
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 296 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
						}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._methodType = request.methodType;\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._subdomain = request.subdomain;\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._url=request.requestPath;\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._get = request.get;\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._files = request.files;\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control._app=\"/");

            
            #line 302 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                         
            
            #line default
            #line hidden
            
            #line 302 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                    Write(fileData.appName);

            
            #line default
            #line hidden
            
            #line 302 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                          
            
            #line default
            #line hidden
WriteLiteral("\";\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control.Before();\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control.");

            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                  
            
            #line default
            #line hidden
            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
             Write(method.name);

            
            #line default
            #line hidden
            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                              
            
            #line default
            #line hidden
WriteLiteral("(");

            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                  
            
            #line default
            #line hidden
            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                             Write(method.parameterNames);

            
            #line default
            #line hidden
            
            #line 304 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
                                                        
            
            #line default
            #line hidden
WriteLiteral(");\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("control.After();\r\n");

WriteLiteral("\t\t\t\t\t\t");

WriteLiteral("if (!serverCahce)\r\n");

WriteLiteral("                        ");

WriteLiteral("{\r\n");

WriteLiteral("                        ");

WriteLiteral("    control.Close();\r\n");

WriteLiteral("                        ");

WriteLiteral("}\n");

WriteLiteral("                        ");

WriteLiteral("else\r\n");

WriteLiteral("                        ");

WriteLiteral("{\r\n");

WriteLiteral("                        ");

WriteLiteral("    NFinal.Owin.Response response = control.GetResponse();\r\n");

WriteLiteral("                        ");

WriteLiteral("    NFinal.RedisCache cache = new NFinal.RedisCache(\"localhost\", minutes);\r\n");

WriteLiteral("                        ");

WriteLiteral("    cache.Set<NFinal.Owin.Response>(key, response,minutes);\r\n");

WriteLiteral("                        ");

WriteLiteral("}\r\n");

WriteLiteral("\t\t\t\t\t");

WriteLiteral("}break;\r\n");

            
            #line 317 "..\..\Template\Startup\NFinalOwinRouter.cshtml"
					i++;
					}
				}
				}
				}
				
            
            #line default
            #line hidden
WriteLiteral("\r\n                default: break;\r\n            }\r\n        }\r\n    }\r\n#endif\r\n}");

        }
    }
}
#pragma warning restore 1591
